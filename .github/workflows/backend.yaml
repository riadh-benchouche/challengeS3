name: Backend CI

on:
  push:
    branches:
      - main
      - CI_branch
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker images
        uses: docker/bake-action@v4
        with:
          workdir: backend
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{ github.ref }}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{ github.ref }},mode=max
      - name: Start services
        working-directory: backend
        run: docker compose up -d --wait --no-build
      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to be ready..."
          docker ps
          while ! curl -s http://localhost:80 > /dev/null; do
            echo "Waiting for the service to start..."
            docker ps
            sleep 5
          done

  tests:
    needs: [install]
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: List Docker containers
        run: docker ps
      - name: Check Docker logs
        run: |
          for container in $(docker ps -q); do
            echo "Logs for container $container:"
            docker logs $container
          done
      - name: Check HTTP reachability
        working-directory: backend
        run: curl -v --fail-with-body http://localhost:80
      - name: Check API reachability
        working-directory: backend
        run: curl -vk --fail-with-body https://localhost:443
      - name: Create test database
        working-directory: backend
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      - name: Run migrations
        working-directory: backend
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: Load fixtures
        working-directory: backend
        run: docker compose exec -T php bin/console -e test doctrine:fixtures:load --no-interaction
      - name: Run PHPUnit
        working-directory: backend
        run: docker compose exec -T php bin/phpunit
      - name: Doctrine Schema Validator
        working-directory: backend
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate

  static-analysis:
    needs: [install]
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run PHPStan
        working-directory: backend
        run: docker compose exec -T php vendor/bin/phpstan --configuration=backend/phpstan.dist.neon

  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
